# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddMedicineDefinationInput {
  category: String
  description: String
  dosageForm: String
  fields: String
  name: String
}

type Address {
  area: String
  city: String
  line: String
  pincode: Float
  state: String
}

input AddressInput {
  area: String
  city: String
  line: String
  pincode: Float
  state: String
}

type AddressResponse {
  area: String
  city: String
  line_1: String
  pincode: String
  state: String
}

input AppointmentAllSlotsInput {
  friday: [String!]
  monday: [String!]
  saturday: [String!]
  sunday: [String!]
  thursday: [String!]
  tuesday: [String!]
  wednesday: [String!]
}

type AppointmentAllSlotsResponse {
  friday: [String!]
  monday: [String!]
  saturday: [String!]
  sunday: [String!]
  thursday: [String!]
  tuesday: [String!]
  wednesday: [String!]
}

type AppointmentBookedResponse {
  date: String
  id: String
  patient: String
  time: String
}

input AppointmentDaySlotInput {
  date: String!
  day: String!
  id: String!
}

type AppointmentResponse {
  booked: [AppointmentBookedResponse!]
  id: String
  slots: AppointmentAllSlotsResponse
  user: String
}

input BookAppointmentInput {
  date: String
  doctor_id: String
  patient_id: String
  time: String
}

type BookingsResponse {
  date: String
  doctor_id: String
  id: String
  time: String
}

input ClinicEditInput {
  address: String
  clinic_name: String
  id: String!
  phone_num: Float
  website: String
}

input ClinicInput {
  address: String
  clinic_name: String!
  phone_num: Float
  website: String
}

type ClinicResponse {
  address: String
  clinic_name: String
  created_at: String
  id: String
  phone_num: Float
  updated_at: Timestamp
  website: String
}

type CommonDefinitionFields {
  id: String
  label: String
  name: String
  operator: String
  possible_values: [String!]
  value: String
}

input CommonDefinitonInput {
  category: String
  fields: String
  id: String
  name: String
  patient_id: String
}

type CommonDefintionsResponse {
  category: String
  description: String
  dosageForm: String
  fields: [CommonDefinitionFields!]
  id: String
  is_fav: Boolean
  name: String
}

type CommonDefsDataResponse {
  defination: String
  id: String
  label: String
  name: String
  operator: String
  possible_values: [String!]
  value: String
}

type CommonDefsResponse {
  data: [CommonDefsDataResponse!]
  defination: String
  id: String
  name: String
}

input ConfirmPatientBookingInput {
  date: String
  doctor_id: String!
  first_name: String!
  hash: String!
  last_name: String!
  otp: String!
  phone: String!
  time: String
}

input ConfirmUserOtpInput {
  hash: String!
  new_password: String!
  otp: Float!
  phone: Float!
}

input CreateInputPatient {
  address: PatientAddressInput
  blood_grp: String
  dob: String
  email: String
  first_name: String
  last_name: String
  patient_serial_id: String
  phone: String!
  salutation: String
  sex: String
}

type DoctorResponse {
  designation: String
  first_name: String
  id: String
  last_name: String
  title: String
}

input EditPatientInput {
  address: PatientAddressInput
  blood_grp: String
  dob: String
  email: String
  first_name: String
  id: String!
  last_name: String
  patient_serial_id: String
  phone: String!
  salutation: String
  sex: String
}

input FetchFilterDefinitionInput {
  category: String
  filteredValue: String
  someId: String
}

input FetchInvoiceInput {
  filter_criteria: String
  patient_id: String
  start: String
  unique: String
}

input FilterInputPatient {
  date: String
  name_phone: String
}

input GetPrescriptionInput {
  id: String
  unique: String
}

type InvoiceResponse {
  created_at: String
  id: String
  line_items: [LineItemResponse!]
  patient_id: PatientResponse
  payment_mode: String
  serial_id: Float
  tax_rate: String
  total_paid: String
  updated_at: String
}

type LineItemResponse {
  description: String
  id: String
  input_id: String
  name: String
  price: String
  quantity: String
}

input LineItemsInput {
  description: String
  id: String
  name: String
  price: String
  quantity: String
}

type MediaResponse {
  filename: String
  mimetype: String
  original_name: String
}

input MedicalHistoryDataInput {
  id: String
  label: String
  name: String
  operator: String
  possible_values: [String!]
  value: String
}

type MedicalHistoryDataResponse {
  id: String
  label: String
  name: String
  operator: String
  possible_values: String
  value: String
}

input MedicalHistoryInput {
  id: String!
  medical_history: [MedicalHistoryInputType!]
}

input MedicalHistoryInputType {
  data: [MedicalHistoryDataInput!]
  defination: String
  name: String
}

type MedicalHistoryResponse {
  data: [MedicalHistoryDataResponse!]
  defination: String
  id: String
  name: String
}

type Mutation {
  addClinic(clinicInput: ClinicInput!): ClinicResponse!
  addDefinationName(addDefinationNameInput: CommonDefinitonInput!): CommonDefintionsResponse!
  addMedicineDefinationName(addMedicineDefinationInput: AddMedicineDefinationInput!): CommonDefintionsResponse!
  bookAppointment(bookAppointmentInput: BookAppointmentInput!): String!
  commonDefinition(commonDefinitonInput: CommonDefinitonInput!): CommonDefintionsResponse!
  confirmBookingByPatient(confirmPatientBookingInput: ConfirmPatientBookingInput!): String!
  confirmOtpUserForgetpassword(confirmUserOtpInput: ConfirmUserOtpInput!): String!
  createPatient(createInputPatient: CreateInputPatient!): PatientResponse!
  createUser(userinput: UserInput!): UserResponse!
  deleteClinic(clinicId: String): String!
  deleteCommonDefination(id: String): String!
  deleteCommonDefinationField(defination: String): CommonDefintionsResponse!
  deleteInvoice(serial_id: Float): String!
  deletePatient(id: String): String!
  deletePrescription(id: String): String!
  deleteUser(phone: Float): String!
  editCommonDefination(defination: String): CommonDefintionsResponse!
  editMedicineDefinationName(editCommonDefinitonInput: AddMedicineDefinationInput!): CommonDefintionsResponse!
  editPatient(editPatientInput: EditPatientInput!): PatientResponse!
  editUser(userEditInput: UserEditInput!): UserResponse!
  favouriteMedicineValues(defination: String): String!
  prescription(data: String): String!
  removeFavouriteMedicineValues(defination_id: String): String!
  removeFavouritePrescription(id: String): [PrescriptionResponse!]!
  resetUserPassword(userResetInput: UserResetInput!): String!
  saveInvoice(saveInvoiceInput: SaveInvoiceInput!): InvoiceResponse!
  saveMedicalHistory(medicalHistoryInput: MedicalHistoryInput!): PatientResponse!
  sendOtpPatientBooking(patientSendOtpBookingInput: PatientSendOtpBookingInput!): String!
  sendOtpUserForgetPassword(phone: Float): SendOtpResponse!
  setApointmentSlots(setAppointmentSlotInput: SetAppointmentSlotInput!): String!
  sigInUser(signInInput: SignInInput!): SignInResponse!
  updateClinic(clinicEditInput: ClinicEditInput!): ClinicResponse!
  updateInvoice(updateInvoiceInput: UpdateInvoiceInput!): InvoiceResponse!
  updatePatientVaccineTrack(id: String): String!
  updateVaccineChart(vaccinePatientInput: VaccinePatientInput!): PatientResponse!
  userActiveStatus(phone: Float): UserResponse!
}

input PatientAddressInput {
  area: String
  city: String
  line_1: String
  pincode: String
  state: String
}

type PatientResponse {
  address: AddressResponse
  age: Float
  blood_grp: String
  bookings: [BookingsResponse!]
  created_at: String
  dob: String
  email: String
  first_name: String
  follow_up_date: Timestamp
  id: String
  isTracked: Boolean
  last_name: String
  media: [MediaResponse!]
  medical_history: [MedicalHistoryResponse!]
  notes: String
  patient_id: String
  patient_serial_id: String
  patient_unique_id: String
  phone: String
  salutation: String
  sex: String
  updated_at: String
  vaccine: [VaccineResponse!]
}

type PatientResponseVaccine {
  due_date: String
  given_date: String
  id: String
  medicine_brand: String
  medicine_name: String
  notes: String
  range: Float
  updated_at: String
  vaccine_group_name: String
}

input PatientSendOtpBookingInput {
  first_name: String
  last_name: String
  phone: String
}

type PrescriptionResponse {
  additional_notes: String
  diagnosis: [CommonDefsResponse!]
  doctor: DoctorResponse
  fav_name: String
  findings: [CommonDefsResponse!]
  id: String
  instructions: [CommonDefsResponse!]
  investigations: [CommonDefsResponse!]
  medicines: [CommonDefsResponse!]
  patient: String
  symptoms: [CommonDefsResponse!]
  updatedAt: Timestamp
  vitals: CommonDefsResponse
}

type Query {
  chart: VaccineChartResponse!
  fetchAllClinics(role: String): [ClinicResponse!]!
  fetchAllUsers(role: String): [UserResponse!]!
  fetchDefinations(category: String): [CommonDefintionsResponse!]!
  fetchFilteredDefinations(fetchFilterDefinitionInput: FetchFilterDefinitionInput!): [CommonDefintionsResponse!]!
  fetchInvoices(fetchInvoiceInput: FetchInvoiceInput!): [InvoiceResponse!]!
  fetchfilteredClinics(filter: String): [ClinicResponse!]!
  getAppointmentsSlots(id: String): AppointmentResponse!
  getAvailableSlots(appointmentDaySlotInput: AppointmentDaySlotInput!): [String!]!
  getDueVaccinePatients(date: String): [PatientResponse!]!
  getFavouritePrescriptions: [PrescriptionResponse!]!
  getGivenVaccinePatients(dates: VaccineChartDatesInput!): [PatientResponse!]!
  getPatient(filterInputPatient: FilterInputPatient!): [PatientResponse!]!
  getPatientBookings: String!
  getPatientMedia(id: String): PatientResponse!
  getPrescriptions(getPrescriptionInput: GetPrescriptionInput!): [PrescriptionResponse!]!
  specificDefination(specificDefintionInput: SpecificDefintionInput!): CommonDefintionsResponse!
  vaccineChart(id: String): [PatientResponseVaccine!]!
}

type RangesResponse {
  end_range: Float
  range_label: String
  range_unit: String
  start_range: Float
}

input SaveInvoiceInput {
  line_items: [LineItemsInput!]
  patient_id: String
  payment_mode: String
  tax_rate: String
  total_paid: String
}

type SendOtpResponse {
  hash: String!
  message: String!
}

input SetAppointmentSlotInput {
  slots: AppointmentAllSlotsInput
  user_id: String!
}

input SignInInput {
  password: String!
  phone: String!
}

type SignInResponse {
  created_at: String
  first_name: String
  id: String!
  last_name: String
  phone: String!
  token: String!
  updated_at: String
}

input SpecificDefintionInput {
  category: String
  id: String
}

"""
The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input UpdateInvoiceInput {
  line_items: [UpdateLineItemsInput!]
  payment_mode: String
  serial_id: Float
  tax_rate: String
  total_paid: String
}

input UpdateLineItemsInput {
  description: String
  input_id: String
  name: String
  price: String
  quantity: String
}

input UserEditInput {
  address: AddressInput
  age: Float
  designation: String
  email: String
  first_name: String
  gender: String
  last_name: String
  phone: Float!
  role: String
  title: String
}

input UserInput {
  address: AddressInput
  age: Float
  designation: String
  email: String
  first_name: String
  gender: String
  last_name: String
  password: String!
  phone: Float!
  role: String
  title: String
}

input UserResetInput {
  new_password: String!
  password: String!
  phone: Float!
}

type UserResponse {
  active_status: Boolean
  address: Address
  age: Float
  clinic: String
  created_at: String
  designation: String
  email: String
  first_name: String
  gender: String
  id: String
  last_name: String
  phone: Float
  role: String
  title: String
  updated_at: Timestamp
}

input VaccineChartDatesInput {
  end: String
  start: String
}

type VaccineChartResponse {
  id: String
  ranges: [RangesResponse!]
  vaccine_group: [VaccinesResponse!]
}

input VaccineInput {
  due_date: Timestamp
  given_date: Timestamp
  medicine_brand: String
  medicine_name: String
  notes: String
  range: Float
  vaccine_group_name: String
}

input VaccinePatientInput {
  due_date: Timestamp
  given_date: Timestamp
  id: String!
  medicine_brand: String
  medicine_name: String
  notes: String
  range: Float
  vaccine: VaccineInput
  vaccine_group_name: String
}

type VaccineResponse {
  due_date: Timestamp
  given_date: Timestamp
  medicine_brand: String
  medicine_name: String
  notes: String
  range: Float
  vaccine_group_name: String
}

type VaccinesResponse {
  schedule: [VaccinesSchedule!]
  vaccine_group_name: String
}

type VaccinesSchedule {
  medicine_brands: [String!]
  medicine_name: String
  range: Float
}
